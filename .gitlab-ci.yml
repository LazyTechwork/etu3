image: gradle:alpine

stages:
  - build
  - test
  - visualize

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME

build:
  stage: build
  script: gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

test:
  stage: test
  script: gradle test jacocoTestReport jacocoLogTestCoverage
  coverage: '/\s*-\s*Instruction Coverage:\s*([0-9.]+)%/'
  needs: [ "build" ]
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  artifacts:
    when: always
    paths:
      - build/reports/jacoco/report.xml
    reports:
      junit: build/test-results/test/**/TEST-*.xml

coverage:
  stage: visualize
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  script:
    - python /opt/cover2cover.py build/reports/jacoco/report.xml $CI_PROJECT_DIR/src/main/java/ > build/reports/cobertura.xml
  needs: [ "test" ]
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/reports/cobertura.xml

benchmark:
  stage: visualize
  needs: [ "test" ]
  script: gradle benchmark
  when: manual
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  artifacts:
    when: always
    paths:
      - build/reports/*Benchmark.svg
